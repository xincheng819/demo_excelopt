/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.13
 * Generated at: 2019-01-17 08:11:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class importExcel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("    <title>demo excel opt</title>\n");
      out.write("    <!-- 新 Bootstrap 核心 CSS 文件 -->\n");
      out.write("    ");
      out.write("\n");
      out.write("    ");
      out.write("\n");
      out.write("    <link href=\"http://cdn.static.runoob.com/libs/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <!-- 可选的Bootstrap主题文件（一般不使用） -->\n");
      out.write("    <link href=\"http://cdn.static.runoob.com/libs/bootstrap/3.3.7/css/bootstrap-theme.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.5.1/css/fileinput.min.css\" rel=\"stylesheet\">\n");
      out.write("    <!-- jQuery文件。务必在bootstrap.min.js 之前引入 -->\n");
      out.write("    <script src=\"http://cdn.static.runoob.com/libs/jquery/2.1.1/jquery.min.js\"></script>\n");
      out.write("    <!-- 最新的 Bootstrap 核心 JavaScript 文件 -->\n");
      out.write("    <script src=\"http://cdn.static.runoob.com/libs/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("    <script src=\"https://cdn.bootcss.com/bootstrap-fileinput/4.5.1/js/fileinput.js\"></script>\n");
      out.write("    <script src=\"https://cdn.bootcss.com/bootstrap-fileinput/4.5.1/js/locales/zh.js\"></script>\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("        $(document).on('ready', function() {\n");
      out.write("            $(\"#input-folder-2\").fileinput({\n");
      out.write("                language:\"zh\",\n");
      out.write("                uploadUrl:\" /excelUpload/upload\", //上传的地址\n");
      out.write("                uploadExtraData:{},\n");
      out.write("                showRemove :true, //显示移除按钮\n");
      out.write("                showPreview :false, //是否显示预览\n");
      out.write("                showCaption:true,//是否显示标题\n");
      out.write("                browseLabel: 'Select Folder...',\n");
      out.write("                // previewFileIcon: '<i class=\"fas fa-file\"></i>',\n");
      out.write("                maxFileCount:10, //表示允许同时上传的最大文件个数\n");
      out.write("                enctype:'multipart/form-data',\n");
      out.write("                validateInitialCount:true,\n");
      out.write("                msgFilesTooMany: \"选择上传的文件数量({n}) 超过允许的最大数值{m}！\",\n");
      out.write("                allowedPreviewTypes: null, // set to empty, null or false to disable preview for all types\n");
      out.write("                allowedFileExtensions: ['xls', 'xlsx'],\n");
      out.write("                previewFileIconSettings: {\n");
      out.write("                    'xls': '<i class=\"fas fa-file-excel text-success\"></i>',\n");
      out.write("                    'xlsx': '<i class=\"fas fa-file-excel text-success\"></i>'\n");
      out.write("                },\n");
      out.write("                previewFileExtSettings: {\n");
      out.write("                    'xls': function(ext) {\n");
      out.write("                        return ext.match(/(xls|xlsx)$/i);\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }).on(\"fileuploaded\", function (event, data, previewId, index){\n");
      out.write("                var res = data.response;\n");
      out.write("                $(\"#errorBlock\").text(\"Success!  \"+res.res);\n");
      out.write("                console.log(res.res);\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div>\n");
      out.write("    <label for=\"input-folder-2\">Upload All Files From Folder</label>\n");
      out.write("    <div class=\"file-loading\">\n");
      out.write("        <input id=\"input-folder-2\" name=\"input-folder-2[]\" type=\"file\" multiple=\"multiple\">\n");
      out.write("    </div>\n");
      out.write("    <div id=\"errorBlock\" class=\"help-block\"></div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
